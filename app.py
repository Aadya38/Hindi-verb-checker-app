# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tpv5EEDCh5VkSZhT0zUcYaAm1PjgKPi6
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# ---- Load CSV files ----
df = pd.read_csv("merged_verbs.csv", sep=",")
df_plot = pd.read_csv("output_with_root_length.csv")

# ---- Preprocess mapping ----
form_to_row = {}

for _, row in df.iterrows():
    # Map Devanagari root and its forms
    forms = str(row['root']).split(',')
    for form in forms:
        form = form.strip()
        form_to_row[form] = row

    # Map romanized (lowercase for case-insensitive matching)
    if pd.notnull(row['romanized']):
        form_to_row[row['romanized'].strip().lower()] = row

# ---- Streamlit App ----
st.set_page_config(page_title="Hindi Verb Info Checker", page_icon="üìö", layout="centered")

st.title("üìñ Hindi Verb Info Checker")
st.markdown("""
<div style="background-color:#f9f9f9; padding:10px; border-radius:10px;">
<b>Check to see your favourite Hindi Verb is in our list. You can also find information about its frequency and its forms here.</b>
</div>
""", unsafe_allow_html=True)

user_input = st.text_input("üîç Enter a Hindi verb (Devanagari or Romanized):")

if user_input:
    user_input_clean = user_input.strip()

    # Try exact Devanagari match first
    row = form_to_row.get(user_input_clean)

    # If not found, try romanized lowercased
    if row is None:
        row = form_to_row.get(user_input_clean.lower())

    st.progress(50)

    if row is not None:
        st.success(f"‚úÖ '{user_input}' is found!")
        st.markdown(f"**Root:** {row['root']}")
        st.markdown(f"**Verb Forms:** {row['verb_forms']}")
        st.markdown(f"**Count of Verb Forms:** {row['count_vf']}")
        st.markdown(f"**Frequency:** {row['frequency']}")
        st.markdown(f"**English Gloss (romanized):** {row['romanized']}")
        st.balloons()
    else:
        st.error(f"‚ùå '{user_input}' is NOT found in the verb forms.")

st.markdown("""
<div style="background-color:#e8f0fe; padding:10px; border-radius:10px;">
If your verb is not in our list, feel free to submit it using this link:
<a href="https://docs.google.com/document/d/1F3x4JV6eZ6Od3psyjmQwo_XPvpDZ-KHvO0ns7JEL5eI/edit?usp=sharing" target="_blank">üìÑ Submit a Verb</a>.
<br>
If you would like us to give you credit for your contributions, you can provide your name and email. Thanks!
</div>
""", unsafe_allow_html=True)

st.markdown("## üìä Frequency vs Root Length")

fig1, ax1 = plt.subplots(figsize=(8, 6))
ax1.scatter(df_plot["root_length"], df_plot["frequency"], color='royalblue', alpha=0.7, edgecolors='w', s=80)
ax1.set_xlabel("Root Length")
ax1.set_ylabel("Frequency")
ax1.set_title("Frequency vs Root Length")
ax1.grid(True)
st.pyplot(fig1)

st.markdown("## üìà Zipf's Law: log(Rank) vs log(Frequency)")

df_sorted = df_plot.sort_values(by="frequency", ascending=False).reset_index(drop=True)
df_sorted["rank"] = df_sorted.index + 1

fig2, ax2 = plt.subplots(figsize=(8, 6))
ax2.plot(np.log10(df_sorted["rank"]), np.log10(df_sorted["frequency"]), marker='o', linestyle='None', color='darkorange')
ax2.set_xlabel("log10(Rank)")
ax2.set_ylabel("log10(Frequency)")
ax2.set_title("Zipf's Law: log(Rank) vs log(Frequency)")
ax2.grid(True)
st.pyplot(fig2)

st.markdown("""
<div style="background-color:#fff3cd; padding:10px; border-radius:10px;">
Here is a resource that contains all the verbs we found in the HUTB including their forms and frequencies. So far we have <b>722 verbs</b>. Please help us find more!
</div>
""", unsafe_allow_html=True)